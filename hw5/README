V20 observations:
On the first runthrough of these tests:

Again, it appears as though the omprimes1 (sequential version) was able to complete exectuion much faster than omprimes2 (parallel)

We can see this in the comparison from 32 threads on a 1000000000 upper limit

========== omprimes1 100000000 32 ==========
real 1.08
user 1.05
sys 0.03
real 1.08
user 1.05
sys 0.02
real 1.11
user 1.04
sys 0.05

========== omprimes2 100000000 32 ==========
real 0.48
user 23.66
sys 0.32
real 0.66
user 35.12 <- 35 times longer than in omprimes1
sys 0.23
real 0.35
user 16.79 <- 16 times longer than in omprimes1
sys 0.38

The second test shows similar results:

========== omprimes1 100000000 32 ==========
real 1.15
user 1.12
sys 0.03
real 1.57
user 1.54
sys 0.03
real 1.07
user 1.03
sys 0.03

========== omprimes2 100000000 32 ==========
real 0.45
user 21.30 <- 20 times longer than in omprimes1
sys 0.22
real 0.36
user 17.70
sys 0.25
real 0.55
user 28.19 <- 28 times longer than in omprimes1
sys 0.43

For the lab machines, a similar outcome can be seen, to a FAR greater extent:

From the first run:
========== omprimes1 100000000 32 ==========
real 1.28
user 1.11
sys 0.16
real 1.24
user 1.06
sys 0.16
real 1.20
user 1.03
sys 0.15


========== omprimes2 100000000 32 ==========
real 16.63
user 53.88 <- 50 times longer than in omprimes1
sys 0.46
real 16.63
user 53.75 <- 50 times longer than in omprimes1
sys 0.41
real 16.61
user 54.03 <- 50 times longer than in omprimes1
sys 0.40

It took 5 minutes to run this script, so I chose to not run it a second time