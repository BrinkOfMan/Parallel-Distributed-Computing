[brinkm1@rns202-10 hw5]$ time ./trap_omp 2 
OMP defined, threadct = 2
With n = 1048576 trapezoids, our estimate of the integral from 0 to 3.14159 is 2
0.051u 0.004s 0:00.03 166.6%    0+0k 0+0io 0pf+0w

[brinkm1@rns202-10 hw5]$ time ./trap_omp 4
OMP defined, threadct = 4
With n = 1048576 trapezoids, our estimate of the integral from 0 to 3.14159 is 2
0.060u 0.005s 0:00.03 200.0%    0+0k 0+0io 0pf+0w

[brinkm1@rns202-10 hw5]$ time ./trap_omp 8
OMP defined, threadct = 8
With n = 1048576 trapezoids, our estimate of the integral from 0 to 3.14159 is 2
0.093u 0.005s 0:00.04 225.0%    0+0k 0+0io 0pf+0w

[brinkm1@rns202-10 hw5]$ time ./trap_omp 16
OMP defined, threadct = 16
With n = 1048576 trapezoids, our estimate of the integral from 0 to 3.14159 is 2
0.048u 0.008s 0:00.04 100.0%    0+0k 0+0io 0pf+0w

[brinkm1@rns202-10 hw5]$ time ./trap_omp 3
OMP defined, threadct = 3
With n = 1048576 trapezoids, our estimate of the integral from 0 to 3.14159 is 2
0.055u 0.006s 0:00.04 125.0%    0+0k 0+0io 0pf+0w

[brinkm1@rns202-10 hw5]$ time ./trap_omp 5
OMP defined, threadct = 5
With n = 1048576 trapezoids, our estimate of the integral from 0 to 3.14159 is 2
0.064u 0.006s 0:00.04 150.0%    0+0k 0+0io 0pf+0w

[brinkm1@rns202-10 hw5]$ time ./trap_omp 10
OMP defined, threadct = 10
With n = 1048576 trapezoids, our estimate of the integral from 0 to 3.14159 is 2
0.092u 0.005s 0:00.05 180.0%    0+0k 0+0io 0pf+0w

User+Sys time (actual CPU time the process used) seems to increase with more threads. Except for 16, for some reason.

I wonder if this is due to the overhead of initializing the pool of threads, and the more efficient running time not being enough to outweight the initialization time.